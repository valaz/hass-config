  # Ultron Power
  - platform: template
    switches:
    
      ultron_power:
        friendly_name: "Альтрон Энергия"
        icon_template: mdi:database-import
        value_template: "{{ states('sensor.0x4cf8cdf3c777c79_power') | float > 0.1 }}"
        turn_on:
          service: switch.turn_on
          data:
            entity_id: switch.0x4cf8cdf3c777c79_switch
        turn_off:
          service: switch.turn_off
          data:
            entity_id: switch.0x4cf8cdf3c777c79_switch

  - platform: command_line
    switches:    
    
      vm_htpc:
        friendly_name: "HTPC"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start HTPC"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown HTPC"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep HTPC | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_gaming_center:
        friendly_name: "VM Gaming Center"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start GamingCenter"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown GamingCenter"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep GamingCenter | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_groot:
        friendly_name: "VM Groot"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start Groot"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown Groot"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep Groot | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_heimdall:
        friendly_name: "VM Heimdall"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start Heimdall"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown Heimdall"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep Heimdall | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_nice_os:
        friendly_name: "VM NiceOS"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start NiceOS"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown NiceOS"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep NiceOS | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_pop_os:
        friendly_name: "VM Pop OS"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start PopOs"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown PopOs"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep PopOs | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      vm_hive_os:
        friendly_name: "VM HiveOS"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh start HiveOS"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh shutdown HiveOS"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 virsh list --all | grep HiveOS | awk '{print $3$4}' "
        value_template: '{{ value == "running" }}'
        
      docker_transmission:
        friendly_name: "Docker Transmission"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker start transmission"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker stop transmission"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker inspect transmission | jq '.[0].State.Status' -r "
        value_template: '{{ value == "running" }}'
        
      docker_transmission_telegram:
        friendly_name: "Docker Transmission-Telegram"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker start transmission-telegram"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker stop transmission-telegram"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker inspect transmission-telegram | jq '.[0].State.Status' -r "
        value_template: '{{ value == "running" }}'
        
      docker_homebridge:
        friendly_name: "Docker Homebridge"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker start homebridge"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker stop homebridge"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker inspect homebridge | jq '.[0].State.Status' -r "
        value_template: '{{ value == "running" }}'
        
      docker_telegraf:
        friendly_name: "Docker telegraf"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker start telegraf"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker stop telegraf"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker inspect telegraf | jq '.[0].State.Status' -r "
        value_template: '{{ value == "running" }}'
        
      docker_android_debug_bridge:
        friendly_name: "Docker AndroidDebugBridge"
        command_on: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker start AndroidDebugBridge"
        command_off: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker stop AndroidDebugBridge"
        command_state: "ssh -i /config/ultron.key -o StrictHostKeyChecking=no root@192.168.1.11 docker inspect AndroidDebugBridge | jq '.[0].State.Status' -r "
        value_template: '{{ value == "running" }}'
        
        
        
        